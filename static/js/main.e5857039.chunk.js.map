{"version":3,"sources":["firebase.js","components/ChatMessage.js","components/ChatRoom.js","components/SignIn.js","components/SignOut.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","addMessage","text","uid","photoURL","a","messagesRef","collection","add","createdAt","FieldValue","serverTimestamp","ChatMessage","props","message","messageStatus","currentUser","className","src","alt","ChatRoom","useState","formValue","setFormValue","searchQuery","orderBy","limitToLast","useCollectionData","idField","messages","dummy","useRef","useEffect","current","scrollIntoView","behavior","sendMessage","e","preventDefault","map","msg","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","SignIn","onClick","SignOut","signOut","App","user","useAuthState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yWAMAA,IAASC,cAAc,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGZ,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAErBC,EAAmB,WAC5B,IAAMC,EAAW,IAAIZ,IAASS,KAAKI,mBACnCJ,EAAKK,gBAAgBF,IAGZG,EAAU,uCAAG,WAAOC,EAAMC,EAAKC,GAAlB,eAAAC,EAAA,6DAChBC,EAAcV,EAAUW,WAAW,YADnB,SAGhBD,EAAYE,IAAI,CAClBN,OACAC,MACAC,WACAK,UAAWvB,IAASU,UAAUc,WAAWC,oBAPvB,2CAAH,0D,eCNRC,MAbf,SAAqBC,GAAQ,IAAD,EACQA,EAAMC,QAA9BZ,EADgB,EAChBA,KAAMC,EADU,EACVA,IAAKC,EADK,EACLA,SAEbW,EAAiBZ,IAAQR,EAAKqB,YAAYb,IAAO,OAAS,WAEhE,OAAQ,mCACJ,sBAAKc,UAAS,kBAAaF,GAA3B,UACI,qBAAKG,IAAKd,GAAY,wDAAyDe,IAAI,KACnF,4BAAIjB,U,gBCgCDkB,MAtCf,SAAkBP,GAAQ,IAAD,EACaQ,mBAAS,IADtB,mBACdC,EADc,KACHC,EADG,KAIfC,EADc5B,EAAUW,WAAW,YACTkB,QAAQ,aAAaC,YAAY,IAJ5C,EAMFC,YAAkBH,EAAa,CAAEI,QAAS,OAAtDC,EANc,oBAQfC,EAAQC,mBAEdC,qBAAU,WACNF,EAAMG,QAAQC,eAAe,CAAEC,SAAU,aAC1C,CAACN,IAEJ,IAAMO,EAAW,uCAAG,WAAOC,GAAP,mBAAAhC,EAAA,6DAChBgC,EAAEC,iBADc,EAGU3C,EAAKqB,YAAvBb,EAHQ,EAGRA,IAAKC,EAHG,EAGHA,SAHG,SAIVH,EAAWqB,EAAWnB,EAAKC,GAJjB,OAMhBmB,EAAa,IACbO,EAAMG,QAAQC,eAAe,CAAEC,SAAU,WAPzB,2CAAH,sDAUjB,OAAQ,qCACJ,iCACMN,GAAYA,EAASU,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAA0B1B,QAAS0B,GAAjBA,EAAIC,OAExD,sBAAMC,IAAKZ,OAGf,uBAAMa,SAAUP,EAAhB,UACI,uBAAOQ,MAAOtB,EAAWuB,SAAU,SAACR,GAAD,OAAOd,EAAac,EAAES,OAAOF,QAAQG,YAAY,uBACpF,wBAAQC,KAAK,SAASC,UAAW3B,EAAjC,yB,MC9BG4B,MANf,SAAgBrC,GACZ,OACI,wBAAQI,UAAU,gBAAgBkC,QAAStD,EAA3C,kC,MCKOuD,MANf,SAAiBvC,GACb,OAAOlB,EAAKqB,aACR,wBAAQC,UAAU,UAAUkC,QAAS,kBAAMxD,EAAK0D,WAAhD,uBCuBOC,MArBf,WAEE,IAAMC,EAAOC,YAAa7D,GAE1B,OACE,sBAAKsB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,kDACA,wEAEA,cAAC,EAAD,OAGF,kCACIsC,EAAK,GAAK,cAAC,EAAD,IAAe,cAAC,EAAD,UCXpBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5857039.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCYV4AWBwfTNNODOClgcUOIvHdKYqfjvO8\",\n    authDomain: \"few12final.firebaseapp.com\",\n    projectId: \"few12final\",\n    storageBucket: \"few12final.appspot.com\",\n    messagingSenderId: \"948190057179\",\n    appId: \"1:948190057179:web:2ed4d17b20aaee357e32fe\",\n    measurementId: \"G-61X9MXE5G7\"\n});\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n};\n\nexport const addMessage = async (text, uid, photoURL) => {\n    const messagesRef = firestore.collection('messages')\n\n    await messagesRef.add({\n        text,\n        uid,\n        photoURL,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n}","import React from 'react';\nimport './styles/ChatMessage.css';\n\nimport { auth } from '../firebase';\n\nfunction ChatMessage(props) {\n    const { text, uid, photoURL } = props.message;\n\n    const messageStatus = (uid === auth.currentUser.uid) ? 'sent' : 'received';\n\n    return (<>\n        <div className={`message ${messageStatus}`}>\n            <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"\" />\n            <p>{text}</p>\n        </div>\n    </>);\n}\n\nexport default ChatMessage;","import React, { useState, useRef, useEffect } from 'react';\nimport { firestore, addMessage, auth } from '../firebase';\nimport ChatMessage from './ChatMessage';\nimport './styles/ChatRoom.css';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfunction ChatRoom(props) {\n    const [formValue, setFormValue] = useState('');\n\n    const messagesRef = firestore.collection('messages');\n    const searchQuery = messagesRef.orderBy('createdAt').limitToLast(25);\n    \n    const [messages] = useCollectionData(searchQuery, { idField: 'id' });\n\n    const dummy = useRef();\n\n    useEffect(() => {\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\n    }, [messages])\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n\n        const { uid, photoURL } = auth.currentUser;\n        await addMessage(formValue, uid, photoURL);\n\n        setFormValue('');  \n        dummy.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return (<>\n        <main>\n            { messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />) }\n\n            <span ref={dummy}></span>\n        </main>\n\n        <form onSubmit={sendMessage}>\n            <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n            <button type=\"submit\" disabled={!formValue}>Send</button>\n        </form>\n    </>);\n}\n\nexport default ChatRoom;","import React from 'react';\nimport { signInWithGoogle } from '../firebase';\nimport './styles/SignIn.css';\n\nfunction SignIn(props) {\n    return (\n        <button className=\"signin-button\" onClick={signInWithGoogle}>Sign In With Google</button>\n    );\n}\n\nexport default SignIn;","import React from 'react';\nimport { auth } from '../firebase';\nimport './styles/SignOut.css';\n\n\nfunction SignOut(props) {\n    return auth.currentUser && (\n        <button className=\"signOut\" onClick={() => auth.signOut()}>Sign Out</button>\n    );\n}\n\nexport default SignOut;","import React from 'react';\nimport './App.css';\nimport ChatRoom from './components/ChatRoom';\nimport SignIn from './components/SignIn';\nimport SignOut from './components/SignOut';\nimport { auth } from './firebase';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfunction App() {\n\n  const user = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Chat Application</h1>\n        <h2>‚öõÔ∏è üî• üí¨</h2>\n\n        <SignOut />\n      </header>\n      \n      <section>\n        { user[0] ? <ChatRoom /> : <SignIn /> }\n      </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}